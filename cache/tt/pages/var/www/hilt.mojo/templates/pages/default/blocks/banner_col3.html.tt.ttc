use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1473775225',
        'name' => 'pages/default/blocks/banner_col3.html.tt',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "<div class=\"information-blocks\">\n	<div class=\"mozaic-banners-wrapper type-2\">\n		<div class=\"row\">\n			<div class=\"banner-column col-md-4 col-sm-6\">\n				<a class=\"mozaic-banner-entry type-3\" style=\"background-image: url(/img/mozaic-banner-6.jpg);\">\n					<span class=\"mozaic-banner-content\">\n						<span class=\"subtitle\">Категория</span>\n						<span class=\"title\">Игры</span>\n						<span class=\"description\">Описание баннера</span>\n					</span>\n				</a>\n			</div>\n			<div class=\"banner-column col-md-4 col-sm-6\">\n				<a class=\"mozaic-banner-entry type-3\" style=\"background-image: url(/img/mozaic-banner-7.jpg);\">\n					<span class=\"mozaic-banner-content\">\n						<span class=\"subtitle\">Категория</span>\n						<span class=\"title\">Смартфоны</span>\n						<span class=\"description\">Описание баннера</span>\n					</span>\n				</a>\n			</div>\n			<div class=\"banner-column col-md-4 col-sm-12\">\n				<a class=\"mozaic-banner-entry type-3\" style=\"background-image: url(/img/mozaic-banner-8.jpg);\">\n					<span class=\"mozaic-banner-content\">\n						<span class=\"subtitle\">Категория</span>\n						<span class=\"title\">Игровые приставки</span>\n						<span class=\"description\">Описание баннера</span>\n					</span>\n				</a>\n			</div>\n			<div class=\"clear\"></div>\n		</div>\n	</div>\n</div>						\n		\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
